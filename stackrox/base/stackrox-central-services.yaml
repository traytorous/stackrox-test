# Source: Tray Keller
apiVersion: v1
kind: Namespace
metadata:
  name: stackrox
---
# Source: stackrox-central-services/templates/01-central-10-networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ext-to-central
  namespace: stackrox
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  ingress:
    - ports:
      - port: 8443
        protocol: TCP
  podSelector:
    matchLabels:
      app: central
  policyTypes:
  - Ingress
---
# Source: stackrox-central-services/templates/02-scanner-05-network-policy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: scanner
  namespace: stackrox
  labels:
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  podSelector:
    matchLabels:
      app: scanner
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: central

    ports:
    - port: 8080
      protocol: TCP
    - port: 8443
      protocol: TCP
  policyTypes:
    - Ingress
---
# Source: stackrox-central-services/templates/02-scanner-05-network-policy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: scanner-db
  namespace: stackrox
  labels:
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  podSelector:
    matchLabels:
      app: scanner-db
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: scanner
    ports:
    - port: 5432
      protocol: TCP
  policyTypes:
    - Ingress
---
# Source: stackrox-central-services/templates/01-central-02-security.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: stackrox-central
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  privileged: false
  allowPrivilegeEscalation: false
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
    - 'hostPath'
  
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAs'
    ranges:
      - min: 4000
        max: 4000
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 4000
        max: 4000
---
# Source: stackrox-central-services/templates/02-scanner-01-security.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: stackrox-scanner
  labels:
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  privileged: false
  allowPrivilegeEscalation: false
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
---
# Source: stackrox-central-services/templates/01-central-00-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: central
  namespace: stackrox
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
    serviceaccounts.openshift.io/oauth-redirectreference.main: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"central"}}'
    serviceaccounts.openshift.io/oauth-redirecturi.main: "sso/providers/openshift/callback"
imagePullSecrets:
- name: "stackrox"
- name: "stackrox-scanner"
---
# Source: stackrox-central-services/templates/02-scanner-00-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scanner
  namespace: stackrox
  labels:
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
imagePullSecrets:
- name: "stackrox"
- name: "stackrox-scanner"
---
# Source: stackrox-central-services/templates/01-central-08-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: central-config
  namespace: stackrox
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
data:
  central-config.yaml: |
    maintenance:
      safeMode: false # When set to true, Central will sleep forever on the next restart
      compaction:
        enabled: true
        bucketFillFraction: .5 # This controls how densely to compact the buckets. Usually not advised to modify
        freeFractionThreshold: 0.75 # This is the threshold for free bytes / total bytes after which compaction will occur
      forceRollbackVersion: none # This is the config and target rollback version after upgrade complete.
---
# Source: stackrox-central-services/templates/01-central-09-endpoints-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: central-endpoints
  namespace: stackrox
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
data:
  endpoints.yaml: |
    # Sample endpoints.yaml configuration for StackRox Central.
    #
    # # CAREFUL: If the following line is uncommented, do not expose the default endpoint on port 8443 by default.
    # #          This will break normal operation.
    # disableDefault: true # if true, don't serve on :8443
    # endpoints:
    #   # Serve plaintext HTTP only on port 8080
    #   - listen: ":8080"
    #     # Backend protocols, possible values are 'http' and 'grpc'. If unset or empty, assume both.
    #     protocols:
    #       - http
    #     tls:
    #       # Disable TLS. If this is not specified, assume TLS is enabled.
    #       disable: true
    #   # Serve HTTP and  gRPC for sensors only on port 8444
    #   - listen: ":8444"
    #     tls:
    #       # Which TLS certificates to serve, possible values are 'service' (StackRox-generated service certificates)
    #       # and 'default' (user-configured default TLS certificate). If unset or empty, assume both.
    #       serverCerts:
    #         - default
    #         - service
    #       # Client authentication settings.
    #       clientAuth:
    #         # Enforce TLS client authentication. If unset, do not enforce, only request certificates
    #         # opportunistically.
    #         required: true
    #         # Which TLS client CAs to serve, possible values are 'service' (CA for StackRox-generated service
    #         # certificates) and 'user' (CAs for PKI auth providers). If unset or empty, assume both.
    #         certAuthorities: # if not set, assume ["user", "service"]
    #           - service
---
# Source: stackrox-central-services/templates/02-scanner-04-scanner-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: scanner-config
  namespace: stackrox
  labels:
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
data:
  config.yaml: |
    # Configuration file for scanner.
    
    scanner:
      centralEndpoint: https://central.stackrox.svc
      database:
        # Database driver
        type: pgsql
        options:
          # PostgreSQL Connection string
          # https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING
          source: host=scanner-db.stackrox.svc port=5432 user=postgres sslmode=verify-full statement_timeout=60000
    
          # Number of elements kept in the cache
          # Values unlikely to change (e.g. namespaces) are cached in order to save prevent needless roundtrips to the database.
          cachesize: 16384
    
      api:
        httpsPort: 8080
        grpcPort: 8443
    
      updater:
        # Frequency with which the scanner will poll for vulnerability updates.
        interval: 5m
    
      logLevel: INFO
    
      # The scanner intentionally avoids extracting or analyzing any files
      # larger than the following default sizes to prevent DoS attacks.
      # Leave these commented to use a reasonable default.
    
      # The max size of files in images that are extracted.
      # Increasing this number increases memory pressure.
      # maxExtractableFileSizeMB: 200
      # The max size of ELF executable files that are analyzed.
      # Increasing this number may increase disk pressure.
      # maxELFExecutableFileSizeMB: 800
      # The max size of image file reader buffer. Image file data beyond this limit are overflowed to temporary files on disk.
      # maxImageFileReaderBufferSizeMB: 100
---
# Source: stackrox-central-services/templates/01-central-02-security.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: stackrox-central-psp
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
rules:
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    resourceNames:
      - stackrox-central
    verbs:
      - use
---
# Source: stackrox-central-services/templates/02-scanner-01-security.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: stackrox-scanner-psp
  labels:
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
rules:
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  resourceNames:
  - stackrox-scanner
  verbs:
  - use
---
# Source: stackrox-central-services/templates/01-central-03-diagnostics-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: stackrox-central-diagnostics
  namespace: stackrox
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
rules:
- apiGroups:
  - '*'
  resources:
  - "deployments"
  - "daemonsets"
  - "replicasets"
  - "configmaps"
  - "services"
  verbs:
  - get
  - list
---
# Source: stackrox-central-services/templates/01-central-02-security.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: stackrox-central-psp
  namespace: stackrox
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: stackrox-central-psp
subjects:
  - kind: ServiceAccount
    name: central
    namespace: stackrox
---
# Source: stackrox-central-services/templates/01-central-03-diagnostics-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: stackrox-central-diagnostics
  namespace: stackrox
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: stackrox-central-diagnostics
subjects:
  - kind: ServiceAccount
    name: central
    namespace: stackrox
---
# Source: stackrox-central-services/templates/02-scanner-01-security.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: stackrox-scanner-psp
  namespace: stackrox
  labels:
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: stackrox-scanner-psp
subjects:
  - kind: ServiceAccount
    name: scanner
    namespace: stackrox
---
# Source: stackrox-central-services/templates/01-central-14-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: central
  namespace: stackrox
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  ports:
    - name: https
      port: 443
      targetPort: api
  selector:
    app: central
  type: ClusterIP
---
# Source: stackrox-central-services/templates/02-scanner-07-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: scanner
  namespace: stackrox
  labels:
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  ports:
    - name: https-scanner
      port: 8080
      targetPort: 8080
    - name: grpcs-scanner
      port: 8443
      targetPort: 8443
  selector:
    app: scanner
  type: ClusterIP
---
# Source: stackrox-central-services/templates/02-scanner-07-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: scanner-db
  namespace: stackrox
  labels:
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  ports:
    - name: tcp-db
      port: 5432
      targetPort: 5432
  selector:
    app: scanner-db
  type: ClusterIP
---
# Source: stackrox-central-services/templates/01-central-13-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: central
  namespace: stackrox
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
    app: central
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: central
  strategy:
    type: Recreate
  template:
    metadata:
      namespace: stackrox
      labels:
        app: central
        app.kubernetes.io/component: central
        app.kubernetes.io/instance: stackrox-central-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: stackrox
        app.kubernetes.io/part-of: stackrox-central-services
        app.kubernetes.io/version: 3.70.0
        helm.sh/chart: stackrox-central-services-70.0.0
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "8443"
        email: support@stackrox.com
        meta.helm.sh/release-name: stackrox-central-services
        meta.helm.sh/release-namespace: stackrox
        owner: stackrox
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            # Central is single-homed, so avoid preemptible nodes.
            - weight: 100
              preference:
                matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: NotIn
                    values:
                    - "true"
      serviceAccountName: central
      securityContext:
        fsGroup: 4000
        runAsUser: 4000
      containers:
      - name: central
        image: "quay.io/stackrox-io/main:3.70.0"
        command:
          - /stackrox/central-entrypoint.sh
        ports:
          - containerPort: 8443
            name: api
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /v1/ping
            port: 8443
        resources:
          limits:
            cpu: 4000m
            memory: 8Gi
          requests:
            cpu: 1500m
            memory: 4Gi
        securityContext:
          capabilities:
            drop: ["NET_RAW"]
          readOnlyRootFilesystem: true
        env:
        - name: ROX_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ROX_INIT_TELEMETRY_ENABLED
          value: "true"
        - name: ROX_OFFLINE_MODE
          value: "false"
        
        volumeMounts:
        - name: varlog
          mountPath: /var/log/stackrox/
        - name: central-tmp-volume
          mountPath: /tmp
        - name: central-etc-ssl-volume
          mountPath: /etc/ssl
        - name: central-etc-pki-volume
          mountPath: /etc/pki/ca-trust
        - name: central-certs-volume
          mountPath: /run/secrets/stackrox.io/certs/
          readOnly: true
        - name: central-default-tls-cert-volume
          mountPath: /run/secrets/stackrox.io/default-tls-cert/
          readOnly: true
        - name: central-htpasswd-volume
          mountPath: /run/secrets/stackrox.io/htpasswd/
          readOnly: true
        - name: central-jwt-volume
          mountPath: /run/secrets/stackrox.io/jwt/
          readOnly: true
        - name: additional-ca-volume
          mountPath: /usr/local/share/ca-certificates/
          readOnly: true
        - name: central-license-volume
          mountPath: /run/secrets/stackrox.io/central-license/
          readOnly: true
        - name: stackrox-db
          mountPath: /var/lib/stackrox
        - name: central-config-volume
          mountPath: /etc/stackrox
        - name: proxy-config-volume
          mountPath: /run/secrets/stackrox.io/proxy-config/
          readOnly: true
        - name: endpoints-config-volume
          mountPath: /etc/stackrox.d/endpoints/
          readOnly: true
        
        
      volumes:
      - name: varlog
        emptyDir: {}
      - name: central-tmp-volume
        emptyDir: {}
      - name: central-etc-ssl-volume
        emptyDir: {}
      - name: central-etc-pki-volume
        emptyDir: {}
      - name: central-certs-volume
        secret:
          secretName: central-tls
      - name: central-default-tls-cert-volume
        secret:
          secretName: central-default-tls-cert
          optional: true
      - name: central-htpasswd-volume
        secret:
          secretName: central-htpasswd
          optional: true
      - name: central-jwt-volume
        secret:
          secretName: central-tls
          items:
            - key: jwt-key.pem
              path: jwt-key.pem
      - name: additional-ca-volume
        secret:
          secretName: additional-ca
          optional: true
      - name: central-license-volume
        secret:
          secretName: central-license
          optional: true
      - name: central-config-volume
        configMap:
          name: central-config
          optional: true
      - name: proxy-config-volume
        secret:
          secretName: proxy-config
          optional: true
      - name: endpoints-config-volume
        configMap:
          name: central-endpoints
      - name: stackrox-db
        persistentVolumeClaim:
          claimName: stackrox-db
---
# Source: stackrox-central-services/templates/02-scanner-06-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner
  namespace: stackrox
  labels:
    app: scanner
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  replicas: 3
  minReadySeconds: 15
  selector:
    matchLabels:
      app: scanner
  strategy:
    type: Recreate
  template:
    metadata:
      namespace: stackrox
      labels:
        app: scanner
        app.kubernetes.io/component: scanner
        app.kubernetes.io/instance: stackrox-central-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: stackrox
        app.kubernetes.io/part-of: stackrox-central-services
        app.kubernetes.io/version: 3.70.0
        helm.sh/chart: stackrox-central-services-70.0.0
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "8080,8443"
        email: support@stackrox.com
        meta.helm.sh/release-name: stackrox-central-services
        meta.helm.sh/release-namespace: stackrox
        owner: stackrox
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: scanner
              topologyKey: kubernetes.io/hostname
      containers:
      - name: scanner
        
        image: "quay.io/stackrox-io/scanner:3.70.0"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        
        resources:
          limits:
            cpu: 2000m
            memory: 4Gi
          requests:
            cpu: 1000m
            memory: 1500Mi
        command:
        - /entrypoint.sh
        ports:
        - name: https
          containerPort: 8080
        - name: grpc
          containerPort: 8443
        securityContext:
          capabilities:
            drop: ["NET_RAW"]
          runAsUser: 65534
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /scanner/ping
            port: 8080
          timeoutSeconds: 10
          periodSeconds: 10
          failureThreshold: 6
          successThreshold: 1
        volumeMounts:
        - mountPath: /etc/ssl
          name: scanner-etc-ssl-volume
        - mountPath: /etc/pki/ca-trust
          name: scanner-etc-pki-volume
        - mountPath: /usr/local/share/ca-certificates/
          name: additional-ca-volume
          readOnly: true
        - name: scanner-config-volume
          mountPath: /etc/scanner
          readOnly: true
        - name: scanner-tls-volume
          mountPath: /run/secrets/stackrox.io/certs/
          readOnly: true
        - name: vuln-temp-db
          mountPath: /var/lib/stackrox
        - name: proxy-config-volume
          mountPath: /run/secrets/stackrox.io/proxy-config/
          readOnly: true
        - name: scanner-db-password
          mountPath: /run/secrets/stackrox.io/secrets
        
        
      serviceAccountName: scanner
      volumes:
      - name: additional-ca-volume
        secret:
          defaultMode: 420
          optional: true
          secretName: additional-ca
      - emptyDir: {}
        name: scanner-etc-ssl-volume
      - emptyDir: {}
        name: scanner-etc-pki-volume
      - name: scanner-config-volume
        configMap:
          name: scanner-config
      - name: scanner-tls-volume
        secret:
          secretName: scanner-tls
      - name: vuln-temp-db
        emptyDir: {}
      - name: proxy-config-volume
        secret:
          secretName: proxy-config
          optional: true
      - name: scanner-db-password
        secret:
          secretName: scanner-db-password
---
# Source: stackrox-central-services/templates/02-scanner-06-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner-db
  namespace: stackrox
  labels:
    app: scanner-db
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: scanner-db
  strategy:
    type: Recreate
  template:
    metadata:
      namespace: stackrox
      labels:
        app: scanner-db
        app.kubernetes.io/component: scanner
        app.kubernetes.io/instance: stackrox-central-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: stackrox
        app.kubernetes.io/part-of: stackrox-central-services
        app.kubernetes.io/version: 3.70.0
        helm.sh/chart: stackrox-central-services-70.0.0
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "5432"
        email: support@stackrox.com
        meta.helm.sh/release-name: stackrox-central-services
        meta.helm.sh/release-namespace: stackrox
        owner: stackrox
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            # ScannerDB is single-homed, so avoid preemptible nodes.
            - weight: 100
              preference:
                matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: NotIn
                    values:
                    - "true"
            
      initContainers:
        - name: init-db
          image: "quay.io/stackrox-io/scanner-db:3.70.0"
          command:
          - /bin/sh
          - -c
          - |
            mkdir -p /var/lib/postgresql/data
            chmod 700 /var/lib/postgresql/data
            chown -R postgres:postgres /var/lib/postgresql
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
          securityContext:
            runAsUser: 0
      containers:
      - name: db
        command: ["/usr/local/bin/docker-entrypoint.sh", "postgres", "-c", "config_file=/etc/postgresql.conf"]
        image: "quay.io/stackrox-io/scanner-db:3.70.0"
        ports:
        - name: https-db
          containerPort: 5432
        resources:
          limits:
            cpu: 2000m
            memory: 4Gi
          requests:
            cpu: 200m
            memory: 200Mi
        env:
          
        securityContext:
          runAsUser: 70
          runAsGroup: 70
        volumeMounts:
          - name: db-data
            mountPath: /var/lib/postgresql/data
          - name: scanner-db-tls-volume
            mountPath: /run/secrets/stackrox.io/certs
          - name: scanner-db-password
            mountPath: /run/secrets/stackrox.io/secrets
      serviceAccountName: scanner
      securityContext:
        fsGroup: 70
      volumes:
      - name: scanner-config-volume
        configMap:
          name: scanner-config
      - name: scanner-tls-volume
        secret:
          secretName: scanner-tls
      - name: scanner-db-tls-volume
        secret:
          secretName: scanner-db-tls
          defaultMode: 0640
          items:
          - key: cert.pem
            path: server.crt
          - key: key.pem
            path: server.key
          - key: ca.pem
            path: root.crt
      - name: db-data
        emptyDir: {}
      - name: scanner-db-password
        secret:
          secretName: scanner-db-password
---
# Source: stackrox-central-services/templates/02-scanner-08-hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: scanner
  namespace: stackrox
  labels:
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  minReplicas: 2
  maxReplicas: 5
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: scanner
  targetCPUUtilizationPercentage: 150
---
# Source: stackrox-central-services/templates/01-central-04-htpasswd-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: central-htpasswd
  namespace: stackrox
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/resource-policy": "keep"
type: Opaque
stringData:
  htpasswd: |
    admin:$2a$10$77uSDn5valcwixzx0TgE6ukQOC0P7LXJ8WLehMGTTsEl2Lc9mDs8K
---
# Source: stackrox-central-services/templates/01-central-05-tls-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: central-tls
  namespace: stackrox
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/resource-policy": "keep"
type: Opaque
stringData:
  ca.pem: |
    -----BEGIN CERTIFICATE-----
    MIIDPTCCAiWgAwIBAgIQRk/HOKyQLdn32QCjEhypnzANBgkqhkiG9w0BAQsFADAp
    MScwJQYDVQQDEx5TdGFja1JveCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMjIw
    NzI2MDU0MTIwWhcNMjcwNzI1MDU0MTIwWjApMScwJQYDVQQDEx5TdGFja1JveCBD
    ZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQDjX5/TDMHbUOh8BctoA4mZuA4whO6/wc6IW59mkQ1IJZP7A2tXBMmMuGuD
    gRz0pP7baO+Xe2UMMMS2kuD5tmeAy3fxnJUvaNotn5CUKe4+5RB0oRNzXMfhtXGk
    OA9wuEY2Ge8SX4iSytvgjs/9QGPbYVGGw7KzAaE0166qWYOo3Wz52Wl3SasCmuxN
    Qtn8mLoiSKTxgEZijrMSIcM+n2D9JcPKDEnHMF0So9FzNCdg9Kc0747uA5dw+90F
    E5EUMsUMqQY49B/rqpDDLoGk0xh/rxqiFMSkV2Xn8+dPb0rNJwd4eqWhpuWaikXb
    ilroQ3D+S8TBJle7hxgrVVIaTmtfAgMBAAGjYTBfMA4GA1UdDwEB/wQEAwICpDAd
    BgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDwYDVR0TAQH/BAUwAwEB/zAd
    BgNVHQ4EFgQUFrDaBenl+eT+guKWNCY1Y7rwTGkwDQYJKoZIhvcNAQELBQADggEB
    AJ3OwZHMXSDxGy1GJprxJ44JblUbVCEPszFpQvGlH3JRBnXwVktpxJxEZfQMALdx
    qHh/3isW+FHbVBYHPaUHSr8AVLxdiEHDQ81L7KcjEYMQmGJMIlzgB4fL9TbrCYVi
    Y83vM+hY567SBk/n3GIiPSQ4+4vSEWwn+lPuTYzHGXQEO8zca4j5sV4OMLHiFf28
    MJFqweKJ0fSi6s4t1GMm/zIvnPIvpx7WGW1AhzFjCIrDb3Ix3Y9PVCdQXsaaIMFJ
    qyuQQF6mxjwoE6lz+1OOYLn3aRyVf4Z7CfrCgB52GfyUTSzIp87VKb4HohkF90wh
    xhspFqxdoj+3NcppBsNB+8g=
    -----END CERTIFICATE-----
    
  ca-key.pem: |
    -----BEGIN RSA PRIVATE KEY-----
    MIIEpgIBAAKCAQEA41+f0wzB21DofAXLaAOJmbgOMITuv8HOiFufZpENSCWT+wNr
    VwTJjLhrg4Ec9KT+22jvl3tlDDDEtpLg+bZngMt38ZyVL2jaLZ+QlCnuPuUQdKET
    c1zH4bVxpDgPcLhGNhnvEl+Iksrb4I7P/UBj22FRhsOyswGhNNeuqlmDqN1s+dlp
    d0mrAprsTULZ/Ji6Ikik8YBGYo6zEiHDPp9g/SXDygxJxzBdEqPRczQnYPSnNO+O
    7gOXcPvdBRORFDLFDKkGOPQf66qQwy6BpNMYf68aohTEpFdl5/PnT29KzScHeHql
    oablmopF24pa6ENw/kvEwSZXu4cYK1VSGk5rXwIDAQABAoIBAQDIwoQSC2+XwGam
    K0+gdY8nhVYyDQ3pjqxXxd6G54h8rYFt32UFnpp/f86efIAemxjUjmEOtctQ6jam
    piWzFxVoqT8svH8VL1WFdyBnUmakbgkLkbXk5IUwi87dmwo3Et4bouZuqJ+kTS27
    px2KlTIWYGVlwqGkYMoAKHh2vTb8/2vJf6JPaizRD/uk0/rk7mQzDvoiIOoJiIjv
    +dl8WyM6Nx/d6IV7NOGTDLoc7msTJ+/7kbj0IKxcKkEOKgRCRxAhzArYmywd2SXo
    s+f58WiZbRPeTPxyCDw1rT9Kz5QwVvz98lOvc1fZsK0E7mpPPxKO25NATcviiDnK
    j2SmiwphAoGBAPNvOvggigDL9DdMP0mu5yxGLP4raa0ber258A5TcwFo7XppFsvV
    ZDn3EBSoZ0iMefV0vqTPo+Zmm5oHibb1vfewjsnVj8ElDsgEig25nSI57fYc2yCa
    eZwFNQMvDs4TytaNLN8BjY+34ljVdlHgNcMiNZMYnc34Ag6tH3YuqkAHAoGBAO8c
    KaZMa7/J0SFV69flz+FTX81z1RZTKW4yjRmyYAVpXggukVXCCwH9Z2vg5DYk68ss
    Xk13CF5DdfXjBmmmf2i+uw4H0uD/H8e1y5Eiud2yo8U0DvRfxxekgI+yxcQjCSfB
    3xs7MQZWR5gg7z1cNbMbXgEMPLWvFIq0xVwg8XPpAoGBAI1KY/mcOT0ZI5fs41bK
    81YZLQgg/mcA6g6wmwpVmQyacCt6T0bjhha2tVioHbpX/nle10AlXEXgDDQsZ9wP
    acEXcujm0VcTQS8Ko24v62nwIZOVUAHuZuMNiqVcbMVja3l32zFcX2OpIPDahKAk
    +E9XzaygvwbLCbam+PnJP/uFAoGBAO3SdRqSqBj6AqfFbe4vBbR32LHgo/CwhmS0
    ouMMJ7U6N+yrZKKHfatc/6Cs7k9sKZrLZoBmBEy9jHYkeBxdHhxwmFw8K+Ld3h4l
    E3QntfZr17gtLzKgkMVTOQu0JEARGOoSSnYrSXekGVGWcF33ePHMJpOkOD39BdFw
    O1yG56EBAoGBALYd4mb6PbmPgifWiQYYD/B7Gy5saEzJn3FCeFYaXvsOTaWgObGk
    MtZB9htnIOXuLjbBdBqRJqtgxD15CoPkvOJeSf7B4bTb3PjnsiuzEvDbh1gyiUt/
    2lvGn8YUo4UnyZvZB8iWfXtPlALUEZp/ry1nIsKF8ish08FOUFDuGojm
    -----END RSA PRIVATE KEY-----
    
  jwt-key.pem: |
    -----BEGIN RSA PRIVATE KEY-----
    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
    -----END RSA PRIVATE KEY-----
    
  cert.pem: |
    -----BEGIN CERTIFICATE-----
    MIIDkDCCAnigAwIBAgIRAIvm0SGFXOovh3EUwpUChNEwDQYJKoZIhvcNAQELBQAw
    KTEnMCUGA1UEAxMeU3RhY2tSb3ggQ2VydGlmaWNhdGUgQXV0aG9yaXR5MB4XDTIy
    MDcyNjA1NDEyMFoXDTIzMDcyNjA1NDEyMFowIzEhMB8GA1UEAwwYQ0VOVFJBTF9T
    RVJWSUNFOiBDZW50cmFsMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
    17mUWcgaHTnmFpxygzyFL/SedwTA4hKs79r88n0+dhDg+Hx5NWFtytbhhJzfsS7O
    ZEVAZcEiy3Qkj5iizxiSQdtMTQLUg6sofWHynYJW9fazp1l6qOUWhQ4FwWHMpcZh
    DAxrnizSLyxkEoq9pdI4VsuahKA2lgACkib4XO5Lih9LnIO74Ulah+f5QgomvMVS
    tTazaYcZlfeYn4KHwlOwX4t9kVSu7Nzem8hQRx6mnsZl2nIDIfU2ICfNYeNf9uOI
    hV6BORPc6Hs2fpwl090ddAWWm3Cyb6/HOG/Lq3igXFwLE9hHR/URSeddq3rhq1+t
    ly2Pubrgdff4096gJKMEVwIDAQABo4G4MIG1MA4GA1UdDwEB/wQEAwIFoDAdBgNV
    HSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSME
    GDAWgBQWsNoF6eX55P6C4pY0JjVjuvBMaTBVBgNVHREETjBMghBjZW50cmFsLnN0
    YWNrcm94ghRjZW50cmFsLnN0YWNrcm94LnN2Y4IiY2VudHJhbC5zdGFja3JveC5z
    dmMuY2x1c3Rlci5sb2NhbDANBgkqhkiG9w0BAQsFAAOCAQEACZ4/LyF/I9H1kXV4
    WtwHTguRpT9CZJ8nsL9t/Zk2meih7YBpmlVQ5bo3AjqtApVtETMyB9+rDxvFW41A
    MP1UrcTMoDhbR3YZB3rY/EqNKu+VCnAN81coltlG3zkZF5lOTu0u9MmY1u84+5Hg
    7b2Q7+A4z4NEQ3EwNBqTH8LWuKqPX2hwFzn4lxHAHV2aPamLN0BIo0ojfmJb0ew3
    fP8go9eK5fEMpU2ALds4RSOwXzmIr6tA7C7R4yXP9xDyk2pl20Lk6G6AFcO665yj
    gsCMwVs52/BQ5EJy84Mr378/EFfhT0F6n1GBi35NrDH0tKTK3hYCRHXAXRrKezYH
    kT/cWA==
    -----END CERTIFICATE-----
    
  key.pem: |
    -----BEGIN RSA PRIVATE KEY-----
    MIIEowIBAAKCAQEA17mUWcgaHTnmFpxygzyFL/SedwTA4hKs79r88n0+dhDg+Hx5
    NWFtytbhhJzfsS7OZEVAZcEiy3Qkj5iizxiSQdtMTQLUg6sofWHynYJW9fazp1l6
    qOUWhQ4FwWHMpcZhDAxrnizSLyxkEoq9pdI4VsuahKA2lgACkib4XO5Lih9LnIO7
    4Ulah+f5QgomvMVStTazaYcZlfeYn4KHwlOwX4t9kVSu7Nzem8hQRx6mnsZl2nID
    IfU2ICfNYeNf9uOIhV6BORPc6Hs2fpwl090ddAWWm3Cyb6/HOG/Lq3igXFwLE9hH
    R/URSeddq3rhq1+tly2Pubrgdff4096gJKMEVwIDAQABAoIBAAS/9k8/w6tvEezf
    hvnyxC/5H+AY/7I6nQou9TDVpyFsX7e47eZJ/ePgdVi5J4e8MxksGS3kYcK/DOsI
    flU3Aklm7bgoXsuDYkHYfUIQk5+Yzf3aT4QWfzdwxpmqcJoZ0xszzs7Nx9b4EEAE
    RAa5qTnoA7/10x3cZDIZn5BUQt+IpICnSwA1NLcQdEq8c7BTdfrLJqFO/rj+QC1T
    8g92PqmRU1GxoxZ22r8AHLiYt0bHORr5IUpYHYy5r0FgMIYU/iCAQJ34vQ9MScEW
    MT0TA4acA5AEyCoH00gdqP7H5t8xSO5hhOR2qbA8mPNarAKrtwkmFmfDGRg+G1f1
    wMeDdQECgYEA3YJRiqFVDLYOq+18Fgg4S9o+Z9mYwGxzgLeg15mdsuWfWH50+9J7
    4Chn4votiVEYnS+9ngRFpBItF+9UP3+2Mz6DlnDRd9yC6kDNP7igFeglQuDPZDzp
    nrn7DaWEF8bUmXcu/JpU2CNWV6SQPbcva/upjRyuiPWbFQQMZbVd6oECgYEA+VCy
    V6iWpWlTS7MosJblrTgWBkqhhmdCPqfQw/Tag6FPKJ5TDb2ayqxZjrR4f9rOoAFq
    Xne8t7GCExu6QTzlRLCzVYrQI2Y1fo8SFC9rDJSmo46SXuhxH8+4Iz6+fFOBY9Va
    HoG1IWVRempVBUpHueoV6zjmlEq/9QIwH5lGEtcCgYB77zooUnP/lK1IzKssuJSm
    /AkGmdy5bPSDBDrd5nkxawBoxvg1HWNp27GkcU2hEtqut9Nj4ggE8JaCWcnNbWtH
    6KY/Ogg5BAvLfU5ZZLdNCoIulRH0h5A+2tf4nq71jq3M375OXxsxgzP//Xcm0KOb
    y0bmSTHuN1z5uTYmgf92AQKBgFInwV0ZdOr1FjmvxAzM7Mpz3O4d0bRUeoPjEOxB
    12/gzBD6eyvf+w4mVSytU7fuBoC7dq3CjzGJEO/zByFQS8yi3bWmlIfVunMF+lMk
    fQYcRf1HkfwsZHqzHF6g4mxdqBmZyKSc4W8rz/mi6HlhzNj6xlZI3dKn/zFhkzIW
    c/zpAoGBAIDUtH7ZCyKZv4iZFSqZgr2sJMSEEB7EAgNPIHQT+S5B9zt8eR697VNC
    597JQSKHnQ3Q98ZksW8h2mQXXQA6IClzKF5AiJRdwzzMJ1+Xk1J9qOWXxNG/Gs1N
    weFVHyB0M6tw/EZaVHSYTrFkCvmusmdZdXqWqdfOI5kguck1m3Qo
    -----END RSA PRIVATE KEY-----
---
# Source: stackrox-central-services/templates/02-scanner-02-db-password-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: scanner-db-password
  namespace: stackrox
  labels:
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/resource-policy": keep
type: Opaque
stringData:
  password: |
    YpomZ833glHn774SeNCzESQe0kqoKAmT
---
# Source: stackrox-central-services/templates/02-scanner-03-tls-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: scanner-tls
  namespace: stackrox
  labels:
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/resource-policy": keep
type: Opaque
stringData:
  ca.pem: |
    -----BEGIN CERTIFICATE-----
    MIIDPTCCAiWgAwIBAgIQRk/HOKyQLdn32QCjEhypnzANBgkqhkiG9w0BAQsFADAp
    MScwJQYDVQQDEx5TdGFja1JveCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMjIw
    NzI2MDU0MTIwWhcNMjcwNzI1MDU0MTIwWjApMScwJQYDVQQDEx5TdGFja1JveCBD
    ZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQDjX5/TDMHbUOh8BctoA4mZuA4whO6/wc6IW59mkQ1IJZP7A2tXBMmMuGuD
    gRz0pP7baO+Xe2UMMMS2kuD5tmeAy3fxnJUvaNotn5CUKe4+5RB0oRNzXMfhtXGk
    OA9wuEY2Ge8SX4iSytvgjs/9QGPbYVGGw7KzAaE0166qWYOo3Wz52Wl3SasCmuxN
    Qtn8mLoiSKTxgEZijrMSIcM+n2D9JcPKDEnHMF0So9FzNCdg9Kc0747uA5dw+90F
    E5EUMsUMqQY49B/rqpDDLoGk0xh/rxqiFMSkV2Xn8+dPb0rNJwd4eqWhpuWaikXb
    ilroQ3D+S8TBJle7hxgrVVIaTmtfAgMBAAGjYTBfMA4GA1UdDwEB/wQEAwICpDAd
    BgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDwYDVR0TAQH/BAUwAwEB/zAd
    BgNVHQ4EFgQUFrDaBenl+eT+guKWNCY1Y7rwTGkwDQYJKoZIhvcNAQELBQADggEB
    AJ3OwZHMXSDxGy1GJprxJ44JblUbVCEPszFpQvGlH3JRBnXwVktpxJxEZfQMALdx
    qHh/3isW+FHbVBYHPaUHSr8AVLxdiEHDQ81L7KcjEYMQmGJMIlzgB4fL9TbrCYVi
    Y83vM+hY567SBk/n3GIiPSQ4+4vSEWwn+lPuTYzHGXQEO8zca4j5sV4OMLHiFf28
    MJFqweKJ0fSi6s4t1GMm/zIvnPIvpx7WGW1AhzFjCIrDb3Ix3Y9PVCdQXsaaIMFJ
    qyuQQF6mxjwoE6lz+1OOYLn3aRyVf4Z7CfrCgB52GfyUTSzIp87VKb4HohkF90wh
    xhspFqxdoj+3NcppBsNB+8g=
    -----END CERTIFICATE-----
    
  cert.pem: |
    -----BEGIN CERTIFICATE-----
    MIIDjzCCAnegAwIBAgIQB2l4BPVmlSjIKBkQ/11OezANBgkqhkiG9w0BAQsFADAp
    MScwJQYDVQQDEx5TdGFja1JveCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMjIw
    NzI2MDU0MTIwWhcNMjMwNzI2MDU0MTIwWjAjMSEwHwYDVQQDDBhTQ0FOTkVSX1NF
    UlZJQ0U6IFNjYW5uZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDC
    RvBcQAZn7S0ugOxopA6gJfCI7cSanjPbQYYye0e9Qw5t/lC1ijIaK7989gYAGjHy
    YG5xU9+3ssuL4oppHPaLD0ps+x3czKxvSLT75zvXKT/ByUevY5POwqWK54u5r6ko
    JfiCaFZP8CbVuX+hv1vyn8ulqzQN0pmaQZawI+N3c3bB05wSoobqHAeDxkwam8Ec
    F6E4oK+3Z706YcJBIWHyqeaioIs/Bdj+03JAIqJvZzYL/nmt4BubOiNF2sgxiJ1X
    xZgdZFfWp41vEXsqhZvTQFC79XC/QlXCFnAPmB7kdPTUvTelpwijHmZWFw/3vHNK
    7302CpMgyIq0v7Ez3DdzAgMBAAGjgbgwgbUwDgYDVR0PAQH/BAQDAgWgMB0GA1Ud
    JQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQY
    MBaAFBaw2gXp5fnk/oLiljQmNWO68ExpMFUGA1UdEQROMEyCEHNjYW5uZXIuc3Rh
    Y2tyb3iCFHNjYW5uZXIuc3RhY2tyb3guc3ZjgiJzY2FubmVyLnN0YWNrcm94LnN2
    Yy5jbHVzdGVyLmxvY2FsMA0GCSqGSIb3DQEBCwUAA4IBAQDRiaLEc7ao1DB6Qie6
    vP/WApswBsKFWFRuv93TMjbxjZQTHoXdw5D+6pRmPNR8c4liNjG4kcfue0mSisW1
    itYb/gbo7THTuXuMNLdCwBzI46gPcwaFy6AjZEHvowbuW30jrnGFvJRF+Szj0/Ht
    Jk9iykTs6s7Ktc1rboJkV0kTOtAEuxbJByC+cFiLOA0IKaXe/atLw8Lhc3SGYvzj
    HmTUzOkP397UDaFJzUuZM5WZBsiI9ubicaN2RAWtesP6PvBnIsHMlzDQ+GcB+XmZ
    8h4N5BWl+E+wzLLqc0hy23VMmYoR2dh93rzi4m2BAbUIJs/tBD0uNJnj8ZTz4gxz
    yfh8
    -----END CERTIFICATE-----
    
  key.pem: |
    -----BEGIN RSA PRIVATE KEY-----
    MIIEogIBAAKCAQEAwkbwXEAGZ+0tLoDsaKQOoCXwiO3Emp4z20GGMntHvUMObf5Q
    tYoyGiu/fPYGABox8mBucVPft7LLi+KKaRz2iw9KbPsd3Mysb0i0++c71yk/wclH
    r2OTzsKliueLua+pKCX4gmhWT/Am1bl/ob9b8p/Lpas0DdKZmkGWsCPjd3N2wdOc
    EqKG6hwHg8ZMGpvBHBehOKCvt2e9OmHCQSFh8qnmoqCLPwXY/tNyQCKib2c2C/55
    reAbmzojRdrIMYidV8WYHWRX1qeNbxF7KoWb00BQu/Vwv0JVwhZwD5ge5HT01L03
    pacIox5mVhcP97xzSu99NgqTIMiKtL+xM9w3cwIDAQABAoIBAHu9Ty6SoQHksNhj
    yS/E/oPGZnPwbT7F8OV/0IequcC0SyaHysQ2Jz9AChD/akb6aEGmZfHMqDuKp9aL
    DflxNx7POGo9b4HI4zNmLdAcMaMTZMZ6+yuc0vHoTCQy4m38klM+DBCTgBYeMb4D
    DmXpShk46i604szDDI6Ro/bAhQr45dYArt1knHtGqz28QI3iEQNPJAbHDRaV6ya6
    VWN6ZAHAi56Q6vvcekamCkg4B32KpOflMJ20Yq9rdSt2c6ThATGtgMslNKzZ8gLA
    tLqZhI7IISoCwM3A0STTtHLaFLdKmknleRxzi8g4VUjZfhb2kLnkTz8A93+EKtQv
    PGum9LECgYEA4mcfFFddubgiB2jJ87bmvv8Ep9YKp0tj8cwoSlHQfQQcSDP0udHd
    5ASzjQmvb7cyNhmcAR/XGrzkvcUy82cvC24iH6B5ciwll3yDpU89tqpc9B9c4Nge
    6XU88yaPTymDYFuG98s3/MQTfr6dV5orQw9a6m0LmFY6WfVSmR1pyY0CgYEA26yv
    0JcNDdyAUf1Uf3rWK2d3JBU7LkbIKOqtO40kRjxaGBDPTkzKNVp7o1TUnXWaUBBZ
    dvRskzBOIaq6zLYbd7iPCGxlP/RU879jjupRNcf4vc4jW3BYoG6f2vLuAEH4VCkk
    XzepimgsfdQZxWndoYRfJhPN0K4ArXChTlV/RP8CgYBisMEDhPH+Ox3aTPt7mYcM
    Su4km1EZi+uNQ4lsnC1d0aTidIOBXNJ0yvfZyxcGg70HiDJQ6yhBJ4Yukv+ayqff
    O6r0TmeiNUxNtKFONjSYo7rRT7qU6KDQ86IV/AEMaPQz1LII4jUNogs9fKnpvfKN
    0Ou4tMARL8VP4XiX9hJfIQKBgERiw/DZtTSlekUL6iwtX1LvyMUw3tWPL2ydcgRh
    8fLzgtCPGxozCZgGbQrxs6a5H6rhDBjeCpbfqNMORUzJPE/O4qgqpnJ8a53d7O5m
    v5VQhX0BGTy0AsMe7SDKE5F8+AOrMyl5OIxf1cnuJ3+vb1GC1eQSsjXOlWNo9q5e
    K1qdAoGAVG1rbWXq8Z8vMK4sqdJXgsZjneKyZR/eBi7383Qxu5frtkS2GhRXNqQ5
    c5/bC9JC32Vx8HK5BOd1U1Hrp0dQQfsm0mab5SuhVZ6yE3ru9x1jKtnUq6c6OTaL
    gbQ4Cfm6tn5LzrFH5L71p4P0exSA6Rwq1sZG5lhWDj70qm+W4vA=
    -----END RSA PRIVATE KEY-----
---
# Source: stackrox-central-services/templates/02-scanner-03-tls-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: scanner-db-tls
  namespace: stackrox
  labels:
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/resource-policy": "keep"
type: Opaque
stringData:
  ca.pem: |
    -----BEGIN CERTIFICATE-----
    MIIDPTCCAiWgAwIBAgIQRk/HOKyQLdn32QCjEhypnzANBgkqhkiG9w0BAQsFADAp
    MScwJQYDVQQDEx5TdGFja1JveCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMjIw
    NzI2MDU0MTIwWhcNMjcwNzI1MDU0MTIwWjApMScwJQYDVQQDEx5TdGFja1JveCBD
    ZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQDjX5/TDMHbUOh8BctoA4mZuA4whO6/wc6IW59mkQ1IJZP7A2tXBMmMuGuD
    gRz0pP7baO+Xe2UMMMS2kuD5tmeAy3fxnJUvaNotn5CUKe4+5RB0oRNzXMfhtXGk
    OA9wuEY2Ge8SX4iSytvgjs/9QGPbYVGGw7KzAaE0166qWYOo3Wz52Wl3SasCmuxN
    Qtn8mLoiSKTxgEZijrMSIcM+n2D9JcPKDEnHMF0So9FzNCdg9Kc0747uA5dw+90F
    E5EUMsUMqQY49B/rqpDDLoGk0xh/rxqiFMSkV2Xn8+dPb0rNJwd4eqWhpuWaikXb
    ilroQ3D+S8TBJle7hxgrVVIaTmtfAgMBAAGjYTBfMA4GA1UdDwEB/wQEAwICpDAd
    BgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDwYDVR0TAQH/BAUwAwEB/zAd
    BgNVHQ4EFgQUFrDaBenl+eT+guKWNCY1Y7rwTGkwDQYJKoZIhvcNAQELBQADggEB
    AJ3OwZHMXSDxGy1GJprxJ44JblUbVCEPszFpQvGlH3JRBnXwVktpxJxEZfQMALdx
    qHh/3isW+FHbVBYHPaUHSr8AVLxdiEHDQ81L7KcjEYMQmGJMIlzgB4fL9TbrCYVi
    Y83vM+hY567SBk/n3GIiPSQ4+4vSEWwn+lPuTYzHGXQEO8zca4j5sV4OMLHiFf28
    MJFqweKJ0fSi6s4t1GMm/zIvnPIvpx7WGW1AhzFjCIrDb3Ix3Y9PVCdQXsaaIMFJ
    qyuQQF6mxjwoE6lz+1OOYLn3aRyVf4Z7CfrCgB52GfyUTSzIp87VKb4HohkF90wh
    xhspFqxdoj+3NcppBsNB+8g=
    -----END CERTIFICATE-----
    
  cert.pem: |
    -----BEGIN CERTIFICATE-----
    MIIDnzCCAoegAwIBAgIRANxNUtWCoD4sXt2uiMya1x4wDQYJKoZIhvcNAQELBQAw
    KTEnMCUGA1UEAxMeU3RhY2tSb3ggQ2VydGlmaWNhdGUgQXV0aG9yaXR5MB4XDTIy
    MDcyNjA1NDEyMFoXDTIzMDcyNjA1NDEyMFowKTEnMCUGA1UEAwweU0NBTk5FUl9E
    Ql9TRVJWSUNFOiBTY2FubmVyIERCMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
    CgKCAQEA67w6EiRNJW4fuxUkJxRAyHiBybJtE5gmEg6AXoJ5+QmTtOzY0hrxUDAS
    q/6YGgqvQl/Ke5rsdlqyuNpdNzGjjt7D44Pjjtt3ulpJklQ58gmVF3jfSLewakfU
    X8S4rmfsomc5V02H1cW7BYMgN3tdFZpXCugvpfB1ktb0VVxEoisGNaNsgFoUWLwc
    7nv8TcAWnlf90XAi58Lh09GIopeyhoQj63e6/dyu+U9+Th/HSwyl4YuiHb5wzA0q
    f5qP2ZuH5iQJTimoOVWj+So8kelLKQQGd6EElhe2nyHtZL9swJhfA0IIZWxkEEGQ
    owMf/YztkbU58rWZRImDgEm4AS6MtwIDAQABo4HBMIG+MA4GA1UdDwEB/wQEAwIF
    oDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAf
    BgNVHSMEGDAWgBQWsNoF6eX55P6C4pY0JjVjuvBMaTBeBgNVHREEVzBVghNzY2Fu
    bmVyLWRiLnN0YWNrcm94ghdzY2FubmVyLWRiLnN0YWNrcm94LnN2Y4Ilc2Nhbm5l
    ci1kYi5zdGFja3JveC5zdmMuY2x1c3Rlci5sb2NhbDANBgkqhkiG9w0BAQsFAAOC
    AQEAh73i+5FhoylSviC+tsCysfibinrj9yaAeMhjoJbW5EXCzveWkAdqBDUKVEGb
    It1Cl3haUBbGhhBgREhGgkQG9fEKEjbWyhUlP8vzPIJv3svCn+X5pN4J2NVtcII/
    RIalyvlhEe/2oeFmDLtJpvdt/iokJNT/1lSo/ulEaHHkT4vZzDrM9z6hK7eGbhW7
    dZZ2S7kq7sZusFfUcOIXKGsP3Bovi9ChrrrQxM8M6h7C6fpsIt4owQyq4+Yw3rfg
    B4SjWou1rhH/MFgeelXonceo/D7NO5GU1dUt39VvWXuC/8BZlLK28OK1Gkn8e3Jk
    PL6Vks4aCvMR6IlfYKoX3KW/jQ==
    -----END CERTIFICATE-----
    
  key.pem: |
    -----BEGIN RSA PRIVATE KEY-----
    MIIEpAIBAAKCAQEA67w6EiRNJW4fuxUkJxRAyHiBybJtE5gmEg6AXoJ5+QmTtOzY
    0hrxUDASq/6YGgqvQl/Ke5rsdlqyuNpdNzGjjt7D44Pjjtt3ulpJklQ58gmVF3jf
    SLewakfUX8S4rmfsomc5V02H1cW7BYMgN3tdFZpXCugvpfB1ktb0VVxEoisGNaNs
    gFoUWLwc7nv8TcAWnlf90XAi58Lh09GIopeyhoQj63e6/dyu+U9+Th/HSwyl4Yui
    Hb5wzA0qf5qP2ZuH5iQJTimoOVWj+So8kelLKQQGd6EElhe2nyHtZL9swJhfA0II
    ZWxkEEGQowMf/YztkbU58rWZRImDgEm4AS6MtwIDAQABAoIBAQC5FDkLkVC4eHOV
    MI4H2JDcVDCiKOIWpjgNqTEEArC849YCEIpSuzCG4pdmTichGw5qsEaLMSFB8weq
    tlbFRMXDIAbwE9aPjKO9vbFRn6s26msR2KaFsyJg7zBAWHUfCRzyjNSqRIbHQc0K
    EN80cDivA1QfjhgK0nWc6gM/GYgRQPB9Wkl1RRw2MkC+8MYr5kp6S5bAddw5kM8I
    Pb3LeJgGTdim33CTjHesczSrlbgYw5hiEP5jX7uYZs55MjOEAp+faL1rzB10wpHd
    3A8OGrL6fYd5PB101gAibgJTu63oigAt8BHiXJ9oJ0J66wQbDXxnOO+VaWxDCA51
    uYoqtdJhAoGBAPG8ksTYxryM18FvCCSj9/6FV7v7WZgymmRtiNiu4vKJjX79Z6oy
    YJ3QkzAyMXr8oezqadz4iBUk9eLUyblwEtl8UpPBmUP1arxzyiCT5jj6ei9p2m+Z
    wVn9fGeWUnlWgedl0mdgmciyFkM+/eOoN5mkBUDNvkIlv6lsOl83+LyPAoGBAPml
    ANHElC5vY3tnUxlscY/ASm8XbksGxKRmm8PWVvzU8VDfkv0lu1Ev2IylGTJkeBIQ
    pgB4HtRz5yJpfIrL2v6qQbfWaPYEklxKITTylwL9v3liekHVXQis/+Fxar5bRY9e
    EbSwaK78lHeo/aXwZ/K8sZninsqOKhO5Ne0MmJFZAoGAQS8gRIRP0rgH1dki0P6F
    +NPr/HyihC/hAgOnSwadm9kLlpquQW6kLun3Rp/CR++nmkL7mOJLj6gPxcKrQp29
    93dWrREfSvv6dCak8nPvOJ4SJIbeqAlF4gZAbY5TXvS8wrDqM4YQ8dVTu35Y5/KM
    S5m28OqJyzxymjTc6KAnKnECgYEA4EpYFx9XxvR628d0SLY+vVmVRoQ1qqC1EcPC
    lMvBMb0b5n5IcLpytjmXhJ1cqwLLQefFTUye3mAXvLorlAQdiIptKv8vJEHtQY+0
    j/6YoK5cVnGcyAMrZ/0OlH0y2z3jnDB3FfEczILP3UZuRaVdrx/LLSgHZJMfyMKx
    aX3UoVkCgYByAJi7W+SnU6MIuq5ktLAPxNJ9vdXMxFAi76yjlO1mHytNGtZMtdks
    wC4wzJiZ3vuH5+NZTF6QDTaOZhywpY+Ze+BFrv7dOh7DrynY1we7RUyR7S4jubHE
    DckYtY1v5Clid7hOy6vH2okgthRYplB3hoRbHI2r9RBN4fx4s06hAQ==
    -----END RSA PRIVATE KEY-----
---
# Source: stackrox-central-services/templates/99-generated-values-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: stackrox-generated-ddltfv
  namespace: stackrox
  labels:
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/resource-policy": "keep"
    "helm.sh/hook-delete-policy": "never"
stringData:
  generated-values.yaml: |
    # The following values were generated by the StackRox Central Services Helm chart.
    # You can pass this file to `helm install` via the `-f` parameter, which in conjunction
    # with your local values files and values specified via `--set` will allow you to
    # deterministically reproduce the deployment.
    ca:
      cert: |
        -----BEGIN CERTIFICATE-----
        MIIDPTCCAiWgAwIBAgIQRk/HOKyQLdn32QCjEhypnzANBgkqhkiG9w0BAQsFADAp
        MScwJQYDVQQDEx5TdGFja1JveCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMjIw
        NzI2MDU0MTIwWhcNMjcwNzI1MDU0MTIwWjApMScwJQYDVQQDEx5TdGFja1JveCBD
        ZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
        AoIBAQDjX5/TDMHbUOh8BctoA4mZuA4whO6/wc6IW59mkQ1IJZP7A2tXBMmMuGuD
        gRz0pP7baO+Xe2UMMMS2kuD5tmeAy3fxnJUvaNotn5CUKe4+5RB0oRNzXMfhtXGk
        OA9wuEY2Ge8SX4iSytvgjs/9QGPbYVGGw7KzAaE0166qWYOo3Wz52Wl3SasCmuxN
        Qtn8mLoiSKTxgEZijrMSIcM+n2D9JcPKDEnHMF0So9FzNCdg9Kc0747uA5dw+90F
        E5EUMsUMqQY49B/rqpDDLoGk0xh/rxqiFMSkV2Xn8+dPb0rNJwd4eqWhpuWaikXb
        ilroQ3D+S8TBJle7hxgrVVIaTmtfAgMBAAGjYTBfMA4GA1UdDwEB/wQEAwICpDAd
        BgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDwYDVR0TAQH/BAUwAwEB/zAd
        BgNVHQ4EFgQUFrDaBenl+eT+guKWNCY1Y7rwTGkwDQYJKoZIhvcNAQELBQADggEB
        AJ3OwZHMXSDxGy1GJprxJ44JblUbVCEPszFpQvGlH3JRBnXwVktpxJxEZfQMALdx
        qHh/3isW+FHbVBYHPaUHSr8AVLxdiEHDQ81L7KcjEYMQmGJMIlzgB4fL9TbrCYVi
        Y83vM+hY567SBk/n3GIiPSQ4+4vSEWwn+lPuTYzHGXQEO8zca4j5sV4OMLHiFf28
        MJFqweKJ0fSi6s4t1GMm/zIvnPIvpx7WGW1AhzFjCIrDb3Ix3Y9PVCdQXsaaIMFJ
        qyuQQF6mxjwoE6lz+1OOYLn3aRyVf4Z7CfrCgB52GfyUTSzIp87VKb4HohkF90wh
        xhspFqxdoj+3NcppBsNB+8g=
        -----END CERTIFICATE-----
      key: |
        -----BEGIN RSA PRIVATE KEY-----
        MIIEpgIBAAKCAQEA41+f0wzB21DofAXLaAOJmbgOMITuv8HOiFufZpENSCWT+wNr
        VwTJjLhrg4Ec9KT+22jvl3tlDDDEtpLg+bZngMt38ZyVL2jaLZ+QlCnuPuUQdKET
        c1zH4bVxpDgPcLhGNhnvEl+Iksrb4I7P/UBj22FRhsOyswGhNNeuqlmDqN1s+dlp
        d0mrAprsTULZ/Ji6Ikik8YBGYo6zEiHDPp9g/SXDygxJxzBdEqPRczQnYPSnNO+O
        7gOXcPvdBRORFDLFDKkGOPQf66qQwy6BpNMYf68aohTEpFdl5/PnT29KzScHeHql
        oablmopF24pa6ENw/kvEwSZXu4cYK1VSGk5rXwIDAQABAoIBAQDIwoQSC2+XwGam
        K0+gdY8nhVYyDQ3pjqxXxd6G54h8rYFt32UFnpp/f86efIAemxjUjmEOtctQ6jam
        piWzFxVoqT8svH8VL1WFdyBnUmakbgkLkbXk5IUwi87dmwo3Et4bouZuqJ+kTS27
        px2KlTIWYGVlwqGkYMoAKHh2vTb8/2vJf6JPaizRD/uk0/rk7mQzDvoiIOoJiIjv
        +dl8WyM6Nx/d6IV7NOGTDLoc7msTJ+/7kbj0IKxcKkEOKgRCRxAhzArYmywd2SXo
        s+f58WiZbRPeTPxyCDw1rT9Kz5QwVvz98lOvc1fZsK0E7mpPPxKO25NATcviiDnK
        j2SmiwphAoGBAPNvOvggigDL9DdMP0mu5yxGLP4raa0ber258A5TcwFo7XppFsvV
        ZDn3EBSoZ0iMefV0vqTPo+Zmm5oHibb1vfewjsnVj8ElDsgEig25nSI57fYc2yCa
        eZwFNQMvDs4TytaNLN8BjY+34ljVdlHgNcMiNZMYnc34Ag6tH3YuqkAHAoGBAO8c
        KaZMa7/J0SFV69flz+FTX81z1RZTKW4yjRmyYAVpXggukVXCCwH9Z2vg5DYk68ss
        Xk13CF5DdfXjBmmmf2i+uw4H0uD/H8e1y5Eiud2yo8U0DvRfxxekgI+yxcQjCSfB
        3xs7MQZWR5gg7z1cNbMbXgEMPLWvFIq0xVwg8XPpAoGBAI1KY/mcOT0ZI5fs41bK
        81YZLQgg/mcA6g6wmwpVmQyacCt6T0bjhha2tVioHbpX/nle10AlXEXgDDQsZ9wP
        acEXcujm0VcTQS8Ko24v62nwIZOVUAHuZuMNiqVcbMVja3l32zFcX2OpIPDahKAk
        +E9XzaygvwbLCbam+PnJP/uFAoGBAO3SdRqSqBj6AqfFbe4vBbR32LHgo/CwhmS0
        ouMMJ7U6N+yrZKKHfatc/6Cs7k9sKZrLZoBmBEy9jHYkeBxdHhxwmFw8K+Ld3h4l
        E3QntfZr17gtLzKgkMVTOQu0JEARGOoSSnYrSXekGVGWcF33ePHMJpOkOD39BdFw
        O1yG56EBAoGBALYd4mb6PbmPgifWiQYYD/B7Gy5saEzJn3FCeFYaXvsOTaWgObGk
        MtZB9htnIOXuLjbBdBqRJqtgxD15CoPkvOJeSf7B4bTb3PjnsiuzEvDbh1gyiUt/
        2lvGn8YUo4UnyZvZB8iWfXtPlALUEZp/ry1nIsKF8ish08FOUFDuGojm
        -----END RSA PRIVATE KEY-----
    central:
      adminPassword:
        value: WXwojcxbOdjvgU0sTgglzDkB9EfHK2j6
      jwtSigner:
        key: |
          -----BEGIN RSA PRIVATE KEY-----
          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
          -----END RSA PRIVATE KEY-----
      serviceTLS:
        cert: |
          -----BEGIN CERTIFICATE-----
          MIIDkDCCAnigAwIBAgIRAIvm0SGFXOovh3EUwpUChNEwDQYJKoZIhvcNAQELBQAw
          KTEnMCUGA1UEAxMeU3RhY2tSb3ggQ2VydGlmaWNhdGUgQXV0aG9yaXR5MB4XDTIy
          MDcyNjA1NDEyMFoXDTIzMDcyNjA1NDEyMFowIzEhMB8GA1UEAwwYQ0VOVFJBTF9T
          RVJWSUNFOiBDZW50cmFsMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
          17mUWcgaHTnmFpxygzyFL/SedwTA4hKs79r88n0+dhDg+Hx5NWFtytbhhJzfsS7O
          ZEVAZcEiy3Qkj5iizxiSQdtMTQLUg6sofWHynYJW9fazp1l6qOUWhQ4FwWHMpcZh
          DAxrnizSLyxkEoq9pdI4VsuahKA2lgACkib4XO5Lih9LnIO74Ulah+f5QgomvMVS
          tTazaYcZlfeYn4KHwlOwX4t9kVSu7Nzem8hQRx6mnsZl2nIDIfU2ICfNYeNf9uOI
          hV6BORPc6Hs2fpwl090ddAWWm3Cyb6/HOG/Lq3igXFwLE9hHR/URSeddq3rhq1+t
          ly2Pubrgdff4096gJKMEVwIDAQABo4G4MIG1MA4GA1UdDwEB/wQEAwIFoDAdBgNV
          HSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSME
          GDAWgBQWsNoF6eX55P6C4pY0JjVjuvBMaTBVBgNVHREETjBMghBjZW50cmFsLnN0
          YWNrcm94ghRjZW50cmFsLnN0YWNrcm94LnN2Y4IiY2VudHJhbC5zdGFja3JveC5z
          dmMuY2x1c3Rlci5sb2NhbDANBgkqhkiG9w0BAQsFAAOCAQEACZ4/LyF/I9H1kXV4
          WtwHTguRpT9CZJ8nsL9t/Zk2meih7YBpmlVQ5bo3AjqtApVtETMyB9+rDxvFW41A
          MP1UrcTMoDhbR3YZB3rY/EqNKu+VCnAN81coltlG3zkZF5lOTu0u9MmY1u84+5Hg
          7b2Q7+A4z4NEQ3EwNBqTH8LWuKqPX2hwFzn4lxHAHV2aPamLN0BIo0ojfmJb0ew3
          fP8go9eK5fEMpU2ALds4RSOwXzmIr6tA7C7R4yXP9xDyk2pl20Lk6G6AFcO665yj
          gsCMwVs52/BQ5EJy84Mr378/EFfhT0F6n1GBi35NrDH0tKTK3hYCRHXAXRrKezYH
          kT/cWA==
          -----END CERTIFICATE-----
        key: |
          -----BEGIN RSA PRIVATE KEY-----
          MIIEowIBAAKCAQEA17mUWcgaHTnmFpxygzyFL/SedwTA4hKs79r88n0+dhDg+Hx5
          NWFtytbhhJzfsS7OZEVAZcEiy3Qkj5iizxiSQdtMTQLUg6sofWHynYJW9fazp1l6
          qOUWhQ4FwWHMpcZhDAxrnizSLyxkEoq9pdI4VsuahKA2lgACkib4XO5Lih9LnIO7
          4Ulah+f5QgomvMVStTazaYcZlfeYn4KHwlOwX4t9kVSu7Nzem8hQRx6mnsZl2nID
          IfU2ICfNYeNf9uOIhV6BORPc6Hs2fpwl090ddAWWm3Cyb6/HOG/Lq3igXFwLE9hH
          R/URSeddq3rhq1+tly2Pubrgdff4096gJKMEVwIDAQABAoIBAAS/9k8/w6tvEezf
          hvnyxC/5H+AY/7I6nQou9TDVpyFsX7e47eZJ/ePgdVi5J4e8MxksGS3kYcK/DOsI
          flU3Aklm7bgoXsuDYkHYfUIQk5+Yzf3aT4QWfzdwxpmqcJoZ0xszzs7Nx9b4EEAE
          RAa5qTnoA7/10x3cZDIZn5BUQt+IpICnSwA1NLcQdEq8c7BTdfrLJqFO/rj+QC1T
          8g92PqmRU1GxoxZ22r8AHLiYt0bHORr5IUpYHYy5r0FgMIYU/iCAQJ34vQ9MScEW
          MT0TA4acA5AEyCoH00gdqP7H5t8xSO5hhOR2qbA8mPNarAKrtwkmFmfDGRg+G1f1
          wMeDdQECgYEA3YJRiqFVDLYOq+18Fgg4S9o+Z9mYwGxzgLeg15mdsuWfWH50+9J7
          4Chn4votiVEYnS+9ngRFpBItF+9UP3+2Mz6DlnDRd9yC6kDNP7igFeglQuDPZDzp
          nrn7DaWEF8bUmXcu/JpU2CNWV6SQPbcva/upjRyuiPWbFQQMZbVd6oECgYEA+VCy
          V6iWpWlTS7MosJblrTgWBkqhhmdCPqfQw/Tag6FPKJ5TDb2ayqxZjrR4f9rOoAFq
          Xne8t7GCExu6QTzlRLCzVYrQI2Y1fo8SFC9rDJSmo46SXuhxH8+4Iz6+fFOBY9Va
          HoG1IWVRempVBUpHueoV6zjmlEq/9QIwH5lGEtcCgYB77zooUnP/lK1IzKssuJSm
          /AkGmdy5bPSDBDrd5nkxawBoxvg1HWNp27GkcU2hEtqut9Nj4ggE8JaCWcnNbWtH
          6KY/Ogg5BAvLfU5ZZLdNCoIulRH0h5A+2tf4nq71jq3M375OXxsxgzP//Xcm0KOb
          y0bmSTHuN1z5uTYmgf92AQKBgFInwV0ZdOr1FjmvxAzM7Mpz3O4d0bRUeoPjEOxB
          12/gzBD6eyvf+w4mVSytU7fuBoC7dq3CjzGJEO/zByFQS8yi3bWmlIfVunMF+lMk
          fQYcRf1HkfwsZHqzHF6g4mxdqBmZyKSc4W8rz/mi6HlhzNj6xlZI3dKn/zFhkzIW
          c/zpAoGBAIDUtH7ZCyKZv4iZFSqZgr2sJMSEEB7EAgNPIHQT+S5B9zt8eR697VNC
          597JQSKHnQ3Q98ZksW8h2mQXXQA6IClzKF5AiJRdwzzMJ1+Xk1J9qOWXxNG/Gs1N
          weFVHyB0M6tw/EZaVHSYTrFkCvmusmdZdXqWqdfOI5kguck1m3Qo
          -----END RSA PRIVATE KEY-----
    scanner:
      dbPassword:
        value: YpomZ833glHn774SeNCzESQe0kqoKAmT
      dbServiceTLS:
        cert: |
          -----BEGIN CERTIFICATE-----
          MIIDnzCCAoegAwIBAgIRANxNUtWCoD4sXt2uiMya1x4wDQYJKoZIhvcNAQELBQAw
          KTEnMCUGA1UEAxMeU3RhY2tSb3ggQ2VydGlmaWNhdGUgQXV0aG9yaXR5MB4XDTIy
          MDcyNjA1NDEyMFoXDTIzMDcyNjA1NDEyMFowKTEnMCUGA1UEAwweU0NBTk5FUl9E
          Ql9TRVJWSUNFOiBTY2FubmVyIERCMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
          CgKCAQEA67w6EiRNJW4fuxUkJxRAyHiBybJtE5gmEg6AXoJ5+QmTtOzY0hrxUDAS
          q/6YGgqvQl/Ke5rsdlqyuNpdNzGjjt7D44Pjjtt3ulpJklQ58gmVF3jfSLewakfU
          X8S4rmfsomc5V02H1cW7BYMgN3tdFZpXCugvpfB1ktb0VVxEoisGNaNsgFoUWLwc
          7nv8TcAWnlf90XAi58Lh09GIopeyhoQj63e6/dyu+U9+Th/HSwyl4YuiHb5wzA0q
          f5qP2ZuH5iQJTimoOVWj+So8kelLKQQGd6EElhe2nyHtZL9swJhfA0IIZWxkEEGQ
          owMf/YztkbU58rWZRImDgEm4AS6MtwIDAQABo4HBMIG+MA4GA1UdDwEB/wQEAwIF
          oDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAf
          BgNVHSMEGDAWgBQWsNoF6eX55P6C4pY0JjVjuvBMaTBeBgNVHREEVzBVghNzY2Fu
          bmVyLWRiLnN0YWNrcm94ghdzY2FubmVyLWRiLnN0YWNrcm94LnN2Y4Ilc2Nhbm5l
          ci1kYi5zdGFja3JveC5zdmMuY2x1c3Rlci5sb2NhbDANBgkqhkiG9w0BAQsFAAOC
          AQEAh73i+5FhoylSviC+tsCysfibinrj9yaAeMhjoJbW5EXCzveWkAdqBDUKVEGb
          It1Cl3haUBbGhhBgREhGgkQG9fEKEjbWyhUlP8vzPIJv3svCn+X5pN4J2NVtcII/
          RIalyvlhEe/2oeFmDLtJpvdt/iokJNT/1lSo/ulEaHHkT4vZzDrM9z6hK7eGbhW7
          dZZ2S7kq7sZusFfUcOIXKGsP3Bovi9ChrrrQxM8M6h7C6fpsIt4owQyq4+Yw3rfg
          B4SjWou1rhH/MFgeelXonceo/D7NO5GU1dUt39VvWXuC/8BZlLK28OK1Gkn8e3Jk
          PL6Vks4aCvMR6IlfYKoX3KW/jQ==
          -----END CERTIFICATE-----
        key: |
          -----BEGIN RSA PRIVATE KEY-----
          MIIEpAIBAAKCAQEA67w6EiRNJW4fuxUkJxRAyHiBybJtE5gmEg6AXoJ5+QmTtOzY
          0hrxUDASq/6YGgqvQl/Ke5rsdlqyuNpdNzGjjt7D44Pjjtt3ulpJklQ58gmVF3jf
          SLewakfUX8S4rmfsomc5V02H1cW7BYMgN3tdFZpXCugvpfB1ktb0VVxEoisGNaNs
          gFoUWLwc7nv8TcAWnlf90XAi58Lh09GIopeyhoQj63e6/dyu+U9+Th/HSwyl4Yui
          Hb5wzA0qf5qP2ZuH5iQJTimoOVWj+So8kelLKQQGd6EElhe2nyHtZL9swJhfA0II
          ZWxkEEGQowMf/YztkbU58rWZRImDgEm4AS6MtwIDAQABAoIBAQC5FDkLkVC4eHOV
          MI4H2JDcVDCiKOIWpjgNqTEEArC849YCEIpSuzCG4pdmTichGw5qsEaLMSFB8weq
          tlbFRMXDIAbwE9aPjKO9vbFRn6s26msR2KaFsyJg7zBAWHUfCRzyjNSqRIbHQc0K
          EN80cDivA1QfjhgK0nWc6gM/GYgRQPB9Wkl1RRw2MkC+8MYr5kp6S5bAddw5kM8I
          Pb3LeJgGTdim33CTjHesczSrlbgYw5hiEP5jX7uYZs55MjOEAp+faL1rzB10wpHd
          3A8OGrL6fYd5PB101gAibgJTu63oigAt8BHiXJ9oJ0J66wQbDXxnOO+VaWxDCA51
          uYoqtdJhAoGBAPG8ksTYxryM18FvCCSj9/6FV7v7WZgymmRtiNiu4vKJjX79Z6oy
          YJ3QkzAyMXr8oezqadz4iBUk9eLUyblwEtl8UpPBmUP1arxzyiCT5jj6ei9p2m+Z
          wVn9fGeWUnlWgedl0mdgmciyFkM+/eOoN5mkBUDNvkIlv6lsOl83+LyPAoGBAPml
          ANHElC5vY3tnUxlscY/ASm8XbksGxKRmm8PWVvzU8VDfkv0lu1Ev2IylGTJkeBIQ
          pgB4HtRz5yJpfIrL2v6qQbfWaPYEklxKITTylwL9v3liekHVXQis/+Fxar5bRY9e
          EbSwaK78lHeo/aXwZ/K8sZninsqOKhO5Ne0MmJFZAoGAQS8gRIRP0rgH1dki0P6F
          +NPr/HyihC/hAgOnSwadm9kLlpquQW6kLun3Rp/CR++nmkL7mOJLj6gPxcKrQp29
          93dWrREfSvv6dCak8nPvOJ4SJIbeqAlF4gZAbY5TXvS8wrDqM4YQ8dVTu35Y5/KM
          S5m28OqJyzxymjTc6KAnKnECgYEA4EpYFx9XxvR628d0SLY+vVmVRoQ1qqC1EcPC
          lMvBMb0b5n5IcLpytjmXhJ1cqwLLQefFTUye3mAXvLorlAQdiIptKv8vJEHtQY+0
          j/6YoK5cVnGcyAMrZ/0OlH0y2z3jnDB3FfEczILP3UZuRaVdrx/LLSgHZJMfyMKx
          aX3UoVkCgYByAJi7W+SnU6MIuq5ktLAPxNJ9vdXMxFAi76yjlO1mHytNGtZMtdks
          wC4wzJiZ3vuH5+NZTF6QDTaOZhywpY+Ze+BFrv7dOh7DrynY1we7RUyR7S4jubHE
          DckYtY1v5Clid7hOy6vH2okgthRYplB3hoRbHI2r9RBN4fx4s06hAQ==
          -----END RSA PRIVATE KEY-----
      serviceTLS:
        cert: |
          -----BEGIN CERTIFICATE-----
          MIIDjzCCAnegAwIBAgIQB2l4BPVmlSjIKBkQ/11OezANBgkqhkiG9w0BAQsFADAp
          MScwJQYDVQQDEx5TdGFja1JveCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMjIw
          NzI2MDU0MTIwWhcNMjMwNzI2MDU0MTIwWjAjMSEwHwYDVQQDDBhTQ0FOTkVSX1NF
          UlZJQ0U6IFNjYW5uZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDC
          RvBcQAZn7S0ugOxopA6gJfCI7cSanjPbQYYye0e9Qw5t/lC1ijIaK7989gYAGjHy
          YG5xU9+3ssuL4oppHPaLD0ps+x3czKxvSLT75zvXKT/ByUevY5POwqWK54u5r6ko
          JfiCaFZP8CbVuX+hv1vyn8ulqzQN0pmaQZawI+N3c3bB05wSoobqHAeDxkwam8Ec
          F6E4oK+3Z706YcJBIWHyqeaioIs/Bdj+03JAIqJvZzYL/nmt4BubOiNF2sgxiJ1X
          xZgdZFfWp41vEXsqhZvTQFC79XC/QlXCFnAPmB7kdPTUvTelpwijHmZWFw/3vHNK
          7302CpMgyIq0v7Ez3DdzAgMBAAGjgbgwgbUwDgYDVR0PAQH/BAQDAgWgMB0GA1Ud
          JQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQY
          MBaAFBaw2gXp5fnk/oLiljQmNWO68ExpMFUGA1UdEQROMEyCEHNjYW5uZXIuc3Rh
          Y2tyb3iCFHNjYW5uZXIuc3RhY2tyb3guc3ZjgiJzY2FubmVyLnN0YWNrcm94LnN2
          Yy5jbHVzdGVyLmxvY2FsMA0GCSqGSIb3DQEBCwUAA4IBAQDRiaLEc7ao1DB6Qie6
          vP/WApswBsKFWFRuv93TMjbxjZQTHoXdw5D+6pRmPNR8c4liNjG4kcfue0mSisW1
          itYb/gbo7THTuXuMNLdCwBzI46gPcwaFy6AjZEHvowbuW30jrnGFvJRF+Szj0/Ht
          Jk9iykTs6s7Ktc1rboJkV0kTOtAEuxbJByC+cFiLOA0IKaXe/atLw8Lhc3SGYvzj
          HmTUzOkP397UDaFJzUuZM5WZBsiI9ubicaN2RAWtesP6PvBnIsHMlzDQ+GcB+XmZ
          8h4N5BWl+E+wzLLqc0hy23VMmYoR2dh93rzi4m2BAbUIJs/tBD0uNJnj8ZTz4gxz
          yfh8
          -----END CERTIFICATE-----
        key: |
          -----BEGIN RSA PRIVATE KEY-----
          MIIEogIBAAKCAQEAwkbwXEAGZ+0tLoDsaKQOoCXwiO3Emp4z20GGMntHvUMObf5Q
          tYoyGiu/fPYGABox8mBucVPft7LLi+KKaRz2iw9KbPsd3Mysb0i0++c71yk/wclH
          r2OTzsKliueLua+pKCX4gmhWT/Am1bl/ob9b8p/Lpas0DdKZmkGWsCPjd3N2wdOc
          EqKG6hwHg8ZMGpvBHBehOKCvt2e9OmHCQSFh8qnmoqCLPwXY/tNyQCKib2c2C/55
          reAbmzojRdrIMYidV8WYHWRX1qeNbxF7KoWb00BQu/Vwv0JVwhZwD5ge5HT01L03
          pacIox5mVhcP97xzSu99NgqTIMiKtL+xM9w3cwIDAQABAoIBAHu9Ty6SoQHksNhj
          yS/E/oPGZnPwbT7F8OV/0IequcC0SyaHysQ2Jz9AChD/akb6aEGmZfHMqDuKp9aL
          DflxNx7POGo9b4HI4zNmLdAcMaMTZMZ6+yuc0vHoTCQy4m38klM+DBCTgBYeMb4D
          DmXpShk46i604szDDI6Ro/bAhQr45dYArt1knHtGqz28QI3iEQNPJAbHDRaV6ya6
          VWN6ZAHAi56Q6vvcekamCkg4B32KpOflMJ20Yq9rdSt2c6ThATGtgMslNKzZ8gLA
          tLqZhI7IISoCwM3A0STTtHLaFLdKmknleRxzi8g4VUjZfhb2kLnkTz8A93+EKtQv
          PGum9LECgYEA4mcfFFddubgiB2jJ87bmvv8Ep9YKp0tj8cwoSlHQfQQcSDP0udHd
          5ASzjQmvb7cyNhmcAR/XGrzkvcUy82cvC24iH6B5ciwll3yDpU89tqpc9B9c4Nge
          6XU88yaPTymDYFuG98s3/MQTfr6dV5orQw9a6m0LmFY6WfVSmR1pyY0CgYEA26yv
          0JcNDdyAUf1Uf3rWK2d3JBU7LkbIKOqtO40kRjxaGBDPTkzKNVp7o1TUnXWaUBBZ
          dvRskzBOIaq6zLYbd7iPCGxlP/RU879jjupRNcf4vc4jW3BYoG6f2vLuAEH4VCkk
          XzepimgsfdQZxWndoYRfJhPN0K4ArXChTlV/RP8CgYBisMEDhPH+Ox3aTPt7mYcM
          Su4km1EZi+uNQ4lsnC1d0aTidIOBXNJ0yvfZyxcGg70HiDJQ6yhBJ4Yukv+ayqff
          O6r0TmeiNUxNtKFONjSYo7rRT7qU6KDQ86IV/AEMaPQz1LII4jUNogs9fKnpvfKN
          0Ou4tMARL8VP4XiX9hJfIQKBgERiw/DZtTSlekUL6iwtX1LvyMUw3tWPL2ydcgRh
          8fLzgtCPGxozCZgGbQrxs6a5H6rhDBjeCpbfqNMORUzJPE/O4qgqpnJ8a53d7O5m
          v5VQhX0BGTy0AsMe7SDKE5F8+AOrMyl5OIxf1cnuJ3+vb1GC1eQSsjXOlWNo9q5e
          K1qdAoGAVG1rbWXq8Z8vMK4sqdJXgsZjneKyZR/eBi7383Qxu5frtkS2GhRXNqQ5
          c5/bC9JC32Vx8HK5BOd1U1Hrp0dQQfsm0mab5SuhVZ6yE3ru9x1jKtnUq6c6OTaL
          gbQ4Cfm6tn5LzrFH5L71p4P0exSA6Rwq1sZG5lhWDj70qm+W4vA=
          -----END RSA PRIVATE KEY-----
---
# Source: stackrox-central-services/templates/01-central-11-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: stackrox-db
  namespace: stackrox
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/resource-policy": keep
    "helm.sh/hook-delete-policy": never
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi


#Tray Keller:Creating a route for the stackrox central. This does not come with it by default
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: stackroxroute
  namespace: stackrox
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 3.70.0
    helm.sh/chart: stackrox-central-services-70.0.0
  annotations:
    openshift.io/host.generated: 'true'
spec:
  host: stackroxroute-stackrox.apps.helmtestdeployment.lab.pnq2.cee.redhat.com
  to:
    kind: Service
    name: central
    weight: 100
  port:
    targetPort: https
  tls:
    termination: passthrough
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
